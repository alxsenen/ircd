.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Status 3pm"
.TH Mojolicious::Plugin::Status 3pm "2018-07-23" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Status \- Mojolicious server status
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $self\->plugin(\*(AqStatus\*(Aq);
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqStatus\*(Aq;
\&
\&  # Secure access to the server status ui with Basic authentication
\&  my $under = $self\->routes\->under(\*(Aq/status\*(Aq =>sub {
\&    my $c = shift;
\&    return 1 if $c\->req\->url\->to_abs\->userinfo eq \*(AqBender:rocks\*(Aq;
\&    $c\->res\->headers\->www_authenticate(\*(AqBasic\*(Aq);
\&    $c\->render(text => \*(AqAuthentication required!\*(Aq, status => 401);
\&    return undef;
\&  });
\&  $self\->plugin(\*(AqStatus\*(Aq => {route => $under});
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::Status is a Mojolicious plugin providing a server
status ui for Mojo::Server::Daemon and Mojo::Server::Prefork. Very useful
for debugging.
.SH "OPTIONS"
.IX Header "OPTIONS"
Mojolicious::Plugin::Status supports the following options.
.SS "return_to"
.IX Subsection "return_to"
.Vb 2
\&  # Mojolicious::Lite
\&  plugin Status => {return_to => \*(Aqsome_route\*(Aq};
.Ve
.PP
Name of route or path to return to when leaving the server status ui, defaults
to \f(CW\*(C`/\*(C'\fR.
.SS "route"
.IX Subsection "route"
.Vb 2
\&  # Mojolicious::Lite
\&  plugin Status => {route => app\->routes\->any(\*(Aq/status\*(Aq)};
.Ve
.PP
Mojolicious::Routes::Route object to attach the server status ui to, defaults
to generating a new one with the prefix \f(CW\*(C`/mojo\-status\*(C'\fR.
.SS "shm_key"
.IX Subsection "shm_key"
.Vb 2
\&  # Mojolicious::Lite
\&  plugin Status => {shm_key => 1234};
.Ve
.PP
Shared memory key to use with IPC::ShareLite, defaults to \f(CW1234\fR.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::Status inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.SS "register"
.IX Subsection "register"
.Vb 1
\&  my $route = $plugin\->register(Mojolicious\->new);
.Ve
.PP
Register renderer and helper in Mojolicious application.
.SH "BUNDLED FILES"
.IX Header "BUNDLED FILES"
The Mojolicious::Plugin::Status distribution includes a few files with
different licenses that have been bundled for internal use.
.SS "Artwork"
.IX Subsection "Artwork"
.Vb 1
\&  Copyright (C) 2018, Sebastian Riedel.
.Ve
.PP
Licensed under the CC-SA License, Version 4.0
<http://creativecommons.org/licenses/by\-sa/4.0>.
.SS "Bootstrap"
.IX Subsection "Bootstrap"
.Vb 1
\&  Copyright (C) 2011\-2018 The Bootstrap Authors.
.Ve
.PP
Licensed under the \s-1MIT\s0 License, <http://creativecommons.org/licenses/MIT>.
.SS "Font Awesome"
.IX Subsection "Font Awesome"
.Vb 1
\&  Copyright (C) Dave Gandy.
.Ve
.PP
Licensed under the \s-1MIT\s0 License, <http://creativecommons.org/licenses/MIT>, and
the \s-1SIL OFL 1.1,\s0 <http://scripts.sil.org/OFL>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sebastian Riedel, \f(CW\*(C`sri@cpan.org\*(C'\fR.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2018, Sebastian Riedel and others.
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <https://mojolicious.org>.
