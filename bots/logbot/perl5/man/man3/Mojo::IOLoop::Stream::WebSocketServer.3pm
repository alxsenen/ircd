.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::IOLoop::Stream::WebSocketServer 3pm"
.TH Mojo::IOLoop::Stream::WebSocketServer 3pm "2018-06-01" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::IOLoop::Stream::WebSocketServer \- Non\-blocking I/O WebSocket server stream
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Mojo::IOLoop::Stream::WebSocketServer;
\&  use Mojo::Transaction::WebSocket;
\&  
\&  # Create transaction
\&  my $ws = Mojo::Transaction::WebSocket\->new;
\&  $ws\->on(message => sub {
\&    my ($ws, $msg) = @_;
\&    say "Message: $msg";
\&  });
\&
\&  # Create stream and process transaction with it
\&  my $stream = Mojo::IOLoop::Stream::WebSocketServer\->new($handle);
\&  $stream\->process($ws);
\&
\&  # Start reactor if necessary
\&  $stream\->reactor\->start unless $stream\->reactor\->is_running;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo::IOLoop::Stream::WebSocketServer is a container for I/O streams used by
Mojo::IOLoop to support the WebSocket protocol server-side.
.SH "EVENTS"
.IX Header "EVENTS"
Mojo::IOLoop::Stream::WEBSocketServer inherits all events from
Mojo::IOLoop::Stream::HTTPServer.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Mojo::IOLoop::Stream::WebSocketServer inherits all attributes from
Mojo::IOLoop::Stream::HTTPServer.
.SH "METHODS"
.IX Header "METHODS"
Mojo::IOLoop::Stream::WebSocketServer inherits all methods from
Mojo::IOLoop::Stream::HTTPServer and implements the following new ones.
.SS "process"
.IX Subsection "process"
.Vb 1
\&  $stream\->process(Mojo::Transaction::WebSocket\->new);
.Ve
.PP
Process a Mojo::Transaction::WebSocket object.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicious.org>.
